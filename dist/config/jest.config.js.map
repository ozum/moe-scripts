{"version":3,"sources":["../../src/config/jest.config.js"],"names":["path","require","ifAnyDep","hasFile","hasPkgProp","fromRoot","isTypeScript","here","join","__dirname","p","useBuiltInBabelConfig","ignores","jestConfig","roots","testEnvironment","moduleFileExtensions","collectCoverageFrom","testMatch","testPathIgnorePatterns","coveragePathIgnorePatterns","transformIgnorePatterns","coverageThreshold","global","branches","functions","lines","statements","transform","globals","tsConfigFile","module","exports"],"mappings":"AAAA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;;eACoDA,QAAQ,UAAR,C;IAA5CC,Q,YAAAA,Q;IAAUC,O,YAAAA,O;IAASC,U,YAAAA,U;IAAYC,Q,YAAAA,Q;;gBACdJ,QAAQ,cAAR,C;IAAjBK,Y,aAAAA,Y;;AAER,IAAMC,OAAO;AAAA,SAAKP,KAAKQ,IAAL,CAAUC,SAAV,EAAqBC,CAArB,CAAL;AAAA,CAAb;;AAEA,IAAMC,wBAAwB,CAACR,QAAQ,UAAR,CAAD,IAAwB,CAACC,WAAW,OAAX,CAAvD;AAEA,IAAMQ,UAAU,CAAC,gBAAD,EAAmB,YAAnB,EAAiC,qBAAjC,EAAwD,wBAAxD,EAAkF,oBAAlF,EAAwG,WAAxG,CAAhB;AAEA,IAAMC,aAAa;AACjBC,SAAO,CAACT,SAAS,KAAT,CAAD,CADU;AAEjBU,mBAAiBb,SAAS,CAAC,SAAD,EAAY,QAAZ,EAAsB,OAAtB,CAAT,EAAyC,OAAzC,EAAkD,MAAlD,CAFA;AAGjBc,wBAAsB,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,EAAoB,KAApB,EAA2B,MAA3B,EAAmC,MAAnC,CAHL;AAIjBC,uBAAqB,CAAC,2BAAD,CAJJ;AAKjBC,aAAW,CAAC,oCAAD,EAAuC,kCAAvC,CALM;AAMjBC,0BAA4BP,OAA5B,SANiB;AAOjBQ,8BAAgCR,OAAhC,SAAyC,6BAAzC,EAPiB;AAQjBS,2BAAyB,CAAC,0CAAD,CARR;AASjBC,qBAAmB;AACjBC,YAAQ;AACNC,gBAAU,GADJ;AAENC,iBAAW,GAFL;AAGNC,aAAO,GAHD;AAINC,kBAAY;AAJN;AADS;AATF,CAAnB;;AAmBA,IAAIrB,YAAJ,EAAkB;AAChBO,aAAWe,SAAX,GAAuB;AAAE,8BAA0B;AAA5B,GAAvB;AACAf,aAAWgB,OAAX,GAAqB;AAAE,eAAW;AAAEC,oBAAc;AAAhB;AAAb,GAArB;AACD,CAHD,MAGO,IAAInB,qBAAJ,EAA2B;AAChCE,aAAWe,SAAX,GAAuB;AAAE,iBAAarB,KAAK,mBAAL;AAAf,GAAvB;AACD;;AAEDwB,OAAOC,OAAP,GAAiBnB,UAAjB","file":"jest.config.js","sourcesContent":["const path = require(\"path\");\nconst { ifAnyDep, hasFile, hasPkgProp, fromRoot } = require(\"../utils\");\nconst { isTypeScript } = require(\"../utils-moe\");\n\nconst here = p => path.join(__dirname, p);\n\nconst useBuiltInBabelConfig = !hasFile(\".babelrc\") && !hasPkgProp(\"babel\");\n\nconst ignores = [\"/node_modules/\", \"/fixtures/\", \"/__tests__/helpers/\", \"/__test_supplements__/\", \"/__test_helpers__/\", \"__mocks__\"];\n\nconst jestConfig = {\n  roots: [fromRoot(\"src\")],\n  testEnvironment: ifAnyDep([\"webpack\", \"rollup\", \"react\"], \"jsdom\", \"node\"),\n  moduleFileExtensions: [\"ts\", \"tsx\", \"js\", \"jsx\", \"json\", \"node\"],\n  collectCoverageFrom: [\"src/**/*.+(js|jsx|ts|tsx)\"],\n  testMatch: [\"**/__tests__/**/*.+(js|jsx|ts|tsx)\", \"**/*.(test|spec).(js|jsx|ts|tsx)\"],\n  testPathIgnorePatterns: [...ignores],\n  coveragePathIgnorePatterns: [...ignores, \"src/(umd|cjs|esm)-entry.js$\"],\n  transformIgnorePatterns: [\"[/\\\\\\\\]node_modules[/\\\\\\\\].+\\\\.(js|jsx)$\"],\n  coverageThreshold: {\n    global: {\n      branches: 100,\n      functions: 100,\n      lines: 100,\n      statements: 100,\n    },\n  },\n};\n\nif (isTypeScript) {\n  jestConfig.transform = { \"^.+\\\\.(js|ts|jsx|tsx)$\": \"ts-jest\" };\n  jestConfig.globals = { \"ts-jest\": { tsConfigFile: \"tsconfig-test.json\" } };\n} else if (useBuiltInBabelConfig) {\n  jestConfig.transform = { \"^.+\\\\.js$\": here(\"./babel-transform\") };\n}\n\nmodule.exports = jestConfig;\n"]}