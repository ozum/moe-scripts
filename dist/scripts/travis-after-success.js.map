{"version":3,"sources":["../../src/scripts/travis-after-success.js"],"names":["spawn","require","resolveBin","getConcurrentlyArgs","hasFile","pkg","parseEnv","autorelease","version","process","env","TRAVIS_BRANCH","reportCoverage","console","log","result","sync","codecov","release","killOthers","stdio","exit","status"],"mappings":"AAAA,IAAMA,QAAQC,QAAQ,aAAR,CAAd;;eAOIA,QAAQ,UAAR,C;IALFC,U,YAAAA,U;IACAC,mB,YAAAA,mB;IACAC,O,YAAAA,O;IACAC,G,YAAAA,G;IACAC,Q,YAAAA,Q;;AAGF,IAAMC,cACJF,IAAIG,OAAJ,KAAgB,6BAAhB,IACAF,SAAS,QAAT,EAAmB,KAAnB,CADA,IAEAG,QAAQC,GAAR,CAAYC,aAAZ,KAA8B,QAF9B,IAGA,CAACL,SAAS,qBAAT,EAAgC,KAAhC,CAJH;AAMA,IAAMM,iBAAiBR,QAAQ,UAAR,KAAuB,CAACE,SAAS,cAAT,EAAyB,KAAzB,CAA/C;;AAEA,IAAI,CAACC,WAAD,IAAgB,CAACK,cAArB,EAAqC;AACnCC,UAAQC,GAAR,CACE,oFADF;AAGD,CAJD,MAIO;AACL,MAAMC,SAASf,MAAMgB,IAAN,CACbd,WAAW,cAAX,CADa,EAEbC,oBACE;AACEc,aAASL,iBACJ,gFADI,GAEL,IAHN;AAIEM,aAASX,cACJ,kKADI,GAEL;AANN,GADF,EASE;AAACY,gBAAY;AAAb,GATF,CAFa,EAab;AAACC,WAAO;AAAR,GAba,CAAf;AAgBAX,UAAQY,IAAR,CAAaN,OAAOO,MAApB;AACD","file":"travis-after-success.js","sourcesContent":["const spawn = require('cross-spawn')\nconst {\n  resolveBin,\n  getConcurrentlyArgs,\n  hasFile,\n  pkg,\n  parseEnv,\n} = require('../utils')\n\nconst autorelease =\n  pkg.version === '0.0.0-semantically-released' &&\n  parseEnv('TRAVIS', false) &&\n  process.env.TRAVIS_BRANCH === 'master' &&\n  !parseEnv('TRAVIS_PULL_REQUEST', false)\n\nconst reportCoverage = hasFile('coverage') && !parseEnv('SKIP_CODECOV', false)\n\nif (!autorelease && !reportCoverage) {\n  console.log(\n    'No need to autorelease or report coverage. Skipping travis-after-success script...',\n  )\n} else {\n  const result = spawn.sync(\n    resolveBin('concurrently'),\n    getConcurrentlyArgs(\n      {\n        codecov: reportCoverage\n          ? `echo installing codecov && npx -p codecov -c 'echo running codecov && codecov'`\n          : null,\n        release: autorelease\n          ? `echo installing semantic-release && npx -p semantic-release@8 -c 'echo running semantic-release && semantic-release pre && npm publish && semantic-release post'`\n          : null,\n      },\n      {killOthers: false},\n    ),\n    {stdio: 'inherit'},\n  )\n\n  process.exit(result.status)\n}\n"]}