{"version":3,"sources":["../../../src/scripts/build/babel.js"],"names":["path","require","spawn","rimraf","normalizeOutDestination","hasPkgProp","fromRoot","resolveBin","hasFile","args","process","argv","slice","here","join","__dirname","p","useBuiltinConfig","includes","config","ignore","useSpecifiedOutDir","outDir","sync","result","executable","concat","stdio","exit","status"],"mappings":"AAAA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;;AACA,IAAMC,QAAQD,QAAQ,aAAR,CAAd;;AACA,IAAME,SAASF,QAAQ,QAAR,CAAf;;eACoCA,QAAQ,iBAAR,C;IAA5BG,uB,YAAAA,uB;;gBAC8CH,QAAQ,aAAR,C;IAA9CI,U,aAAAA,U;IAAYC,Q,aAAAA,Q;IAAUC,U,aAAAA,U;IAAYC,O,aAAAA,O;;AAE1C,IAAMC,OAAOL,wBAAwBM,QAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAxB,EAA+C,WAA/C,CAAb;;AACA,IAAMC,OAAO;AAAA,SAAKb,KAAKc,IAAL,CAAUC,SAAV,EAAqBC,CAArB,CAAL;AAAA,CAAb;;AAEA,IAAMC,mBACJ,CAACR,KAAKS,QAAL,CAAc,WAAd,CAAD,IACA,CAACV,QAAQ,UAAR,CADD,IAEA,CAACH,WAAW,OAAX,CAHH;AAIA,IAAMc,SAASF,mBACX,CAAC,WAAD,EAAcJ,KAAK,yBAAL,CAAd,CADW,GAEX,EAFJ;AAIA,IAAMO,SAASX,KAAKS,QAAL,CAAc,UAAd,IACX,EADW,GAEX,CAAC,UAAD,EAAa,wGAAb,CAFJ;AAIA,IAAMG,qBAAqBZ,KAAKS,QAAL,CAAc,WAAd,CAA3B;AACA,IAAMI,SAASD,qBAAqB,EAArB,GAA0B,CAAC,WAAD,EAAc,KAAd,CAAzC;;AAEA,IAAI,CAACA,kBAAD,IAAuB,CAACZ,KAAKS,QAAL,CAAc,YAAd,CAA5B,EAAyD;AACvDf,SAAOoB,IAAP,CAAYjB,SAASgB,OAAO,CAAP,CAAT,CAAZ;AACD;;AAED,IAAME,SAAStB,MAAMqB,IAAN,CACbhB,WAAW,YAAX,EAAyB;AAAEkB,cAAY;AAAd,CAAzB,CADa,EAETH,MAAJ,QAAeF,MAAf,EAA0BD,MAA1B,GAAkC,KAAlC,GAAyCO,MAAzC,CAAgDjB,IAAhD,CAFa,EAGb;AAAEkB,SAAO;AAAT,CAHa,CAAf;AAMAjB,QAAQkB,IAAR,CAAaJ,OAAOK,MAApB","file":"babel.js","sourcesContent":["const path = require(\"path\");\nconst spawn = require(\"cross-spawn\");\nconst rimraf = require(\"rimraf\");\nconst { normalizeOutDestination } = require(\"../../utils-moe\");\nconst { hasPkgProp, fromRoot, resolveBin, hasFile } = require(\"../../utils\");\n\nconst args = normalizeOutDestination(process.argv.slice(2), '--out-dir');\nconst here = p => path.join(__dirname, p);\n\nconst useBuiltinConfig =\n  !args.includes(\"--presets\") &&\n  !hasFile(\".babelrc\") &&\n  !hasPkgProp(\"babel\");\nconst config = useBuiltinConfig\n  ? [\"--presets\", here(\"../../config/babelrc.js\")]\n  : [];\n\nconst ignore = args.includes(\"--ignore\")\n  ? []\n  : [\"--ignore\", \"**/__tests__,**/__mocks__,**/__test_supplements__,**/__test_helpers__,**/*.(test|spec).(js|ts|jsx|tsx)\"];\n\nconst useSpecifiedOutDir = args.includes(\"--out-dir\");\nconst outDir = useSpecifiedOutDir ? [] : [\"--out-dir\", \"lib\"];\n\nif (!useSpecifiedOutDir && !args.includes(\"--no-clean\")) {\n  rimraf.sync(fromRoot(outDir[1]));\n}\n\nconst result = spawn.sync(\n  resolveBin(\"@babel/cli\", { executable: \"babel\" }),\n  [...outDir, ...ignore, ...config, \"src\"].concat(args),\n  { stdio: \"inherit\" }\n);\n\nprocess.exit(result.status);\n"]}