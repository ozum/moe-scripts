{"version":3,"sources":["../../src/scripts/doc.js"],"names":["fs","require","path","spawn","isTypeScript","hasPkgProp","resolveBin","hasFile","args","process","argv","slice","here","join","__dirname","p","extension","useBuiltinConfig","includes","builtinConfigFile","files","config","template","outputFile","openSync","result","sync","executable","concat","stdio","encoding","doctoc","exit","status"],"mappings":"AAAA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;;AACA,IAAME,QAAQF,QAAQ,aAAR,CAAd;;eACyBA,QAAQ,cAAR,C;IAAjBG,Y,YAAAA,Y;;gBACoCH,QAAQ,UAAR,C;IAApCI,U,aAAAA,U;IAAYC,U,aAAAA,U;IAAYC,O,aAAAA,O;;AAEhC,IAAMC,OAAOC,QAAQC,IAAR,CAAaC,KAAb,CAAmB,CAAnB,CAAb;;AAEA,IAAMC,OAAO;AAAA,SAAKV,KAAKW,IAAL,CAAUC,SAAV,EAAqBC,CAArB,CAAL;AAAA,CAAb;;AACA,IAAMC,YAAYZ,eAAe,IAAf,GAAsB,IAAxC;AAEA,IAAMa,mBAAmB,CAACT,KAAKU,QAAL,CAAc,aAAd,CAAD,IAAiC,CAACX,QAAQ,gBAAR,CAAlC,IAA+D,CAACF,WAAW,UAAX,CAAzF;AACA,IAAMc,oBAAoBP,KAAM,sBAAqBI,SAAU,OAArC,CAA1B;AAEA,IAAMI,QAAQ,CAACZ,KAAKU,QAAL,CAAc,SAAd,CAAD,GAA4B,CAAC,SAAD,EAAa,YAAWF,SAAU,EAAlC,CAA5B,GAAmE,EAAjF;AACA,IAAMK,SAASJ,mBAAmB,CAAC,aAAD,EAAgBE,iBAAhB,CAAnB,GAAwD,EAAvE;AACA,IAAMG,WAAW,CAACd,KAAKU,QAAL,CAAc,YAAd,CAAD,IAAgCX,QAAQ,YAAR,CAAhC,GAAwD,CAAC,YAAD,EAAe,YAAf,CAAxD,GAAuF,EAAxG;AAGA,IAAMgB,aAAavB,GAAGwB,QAAH,CAAY,WAAZ,EAAyB,GAAzB,CAAnB;AAEA,IAAMC,SAAStB,MAAMuB,IAAN,CACbpB,WAAW,mBAAX,EAAgC;AAAEqB,cAAY;AAAd,CAAhC,CADa,EAETN,MAAJ,QAAeC,QAAf,EAA4BF,KAA5B,EAAmCQ,MAAnC,CAA0CpB,IAA1C,CAFa,EAGb;AAAEqB,SAAO,CAAC,SAAD,EAAYN,UAAZ,EAAwB,SAAxB,CAAT;AAA6CO,YAAU;AAAvD,CAHa,CAAf;AAMA,IAAMC,SAAS5B,MAAMuB,IAAN,CACbpB,WAAW,QAAX,EAAqB;AAAEqB,cAAY;AAAd,CAArB,CADa,EAEb,CAAC,WAAD,CAFa,EAGb;AAAEE,SAAO;AAAT,CAHa,CAAf;AAMApB,QAAQuB,IAAR,CAAaP,OAAOQ,MAAP,IAAiBF,OAAOE,MAArC","file":"doc.js","sourcesContent":["const fs = require(\"fs\");\nconst path = require(\"path\");\nconst spawn = require(\"cross-spawn\");\nconst { isTypeScript } = require(\"../utils-moe\");\nconst { hasPkgProp, resolveBin, hasFile } = require(\"../utils\");\n\nconst args = process.argv.slice(2);\n\nconst here = p => path.join(__dirname, p);\nconst extension = isTypeScript ? \"ts\" : \"js\";\n\nconst useBuiltinConfig = !args.includes(\"--configure\") && !hasFile(\".jsdoc2md.json\") && !hasPkgProp(\"jsdoc2md\");\nconst builtinConfigFile = here(`../config/jsdoc2md/${extension}.json`);\n\nconst files = !args.includes(\"--files\") ? [\"--files\", `src/**/*.${extension}`] : [];\nconst config = useBuiltinConfig ? [\"--configure\", builtinConfigFile] : [];\nconst template = !args.includes(\"--template\") || hasFile(\"README.hbs\") ? [\"--template\", \"README.hbs\"] : [];\n\n\nconst outputFile = fs.openSync('README.md', 'w');\n\nconst result = spawn.sync(\n  resolveBin(\"jsdoc-to-markdown\", { executable: \"jsdoc2md\" }),\n  [...config, ...template, ...files].concat(args),\n  { stdio: ['inherit', outputFile, 'inherit'], encoding: 'utf-8' },\n);\n\nconst doctoc = spawn.sync(\n  resolveBin(\"doctoc\", { executable: \"doctoc\" }),\n  ['README.md'],\n  { stdio: 'inherit' },\n);\n\nprocess.exit(result.status || doctoc.status);\n"]}